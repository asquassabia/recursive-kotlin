buildscript {
    ext.kotestVersion = '5.9.1'
    ext.kotlinVersion = '2.1.0'
    ext.kotlinCoroutineVersion = '1.9.0'
    ext.kotlinOshaiLoggingVersion = '7.0.3'
    ext.kotlinArrowVersion = '2.0.0'
    ext.mockkVersion = '1.13.16'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'idea'
}

compileJava {
    options.fork = true
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
kotlin {
    compilerOptions {
        freeCompilerArgs.add("-Xwhen-guards")
    }
}
compileTestJava {
    options.fork = true
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

group = 'org.xrpn'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:$kotlinCoroutineVersion"
    implementation "io.github.oshai:kotlin-logging-jvm:$kotlinOshaiLoggingVersion"
    implementation "io.arrow-kt:arrow-core:$kotlinArrowVersion"
    implementation "io.arrow-kt:arrow-fx-coroutines:$kotlinArrowVersion"
 // testImplementation("io.kotest:kotest-framework-engine-jvm:$kotestVersion")
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion" // for kotest framework
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion" // for kotest core jvm assertions
    testImplementation "io.kotest:kotest-property:$kotestVersion" // for kotest property test
    testImplementation "io.kotest:kotest-framework-datatest:$kotestVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
}

test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(21)
}